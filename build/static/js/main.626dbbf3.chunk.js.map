{"version":3,"sources":["components/Blog.js","components/Icon.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","services/blogs.js","services/login.js","services/users.js","components/Notification.js","components/Header.js","components/UserForm.js","App.js","index.js"],"names":["Blog","blog","updateLike","user","deleteBlog","useState","detailedView","setDetailedView","liked","setLiked","detailHandler","determineLiked","usernames","likedBy","map","like","username","includes","useEffect","className","title","author","onClick","likes","href","url","slice","event","preventDefault","src","alt","name","message","window","confirm","Icon","iconName","component","componentTrail","fill","width","height","viewBox","xlinkHref","LoginForm","login","setUsername","password","setPassword","handleLogin","a","onSubmit","id","type","value","onChange","target","label","to","BlogForm","createBlog","setAuthor","setTitle","setUrl","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","baseUrl","token","getAll","axios","get","then","response","data","newObject","config","headers","Authorization","post","likeBlog","put","delete","setToken","newToken","credentials","createUser","Notification","content","Header","handleLogout","UserForm","userCreate","setName","handleUserCreation","App","blogs","setBlogs","setMessage","setUser","blogFormRef","useRef","getAllBlogs","blogService","reqBlogs","sort","b","loggedUserJSON","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","userService","error","addBlog","blogObject","current","concat","copy","updateIndex","findIndex","blogToUpdate","filter","removeItem","path","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.626dbbf3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nconst Blog = ({ blog, updateLike,user, deleteBlog }) => {\n  const [detailedView, setDetailedView] = useState(true)\n  const [liked, setLiked] = useState(false)\n\n\n  const detailHandler = () => {\n    setDetailedView(!detailedView)\n    if(detailedView) determineLiked()\n  }\n\n  const likeHandler = (event) => {\n    event.preventDefault()\n    updateLike(blog)\n    setLiked(!liked)\n  }\n\n  const deleteHandler = (event) => {\n    event.preventDefault()\n    const message = `Are you sure you want to remove ${blog.title} by ${blog.author}?`\n    if(window.confirm(message)) deleteBlog(blog)\n\n  }\n\n  const determineLiked = () => {\n    const usernames = blog.likedBy.map(like => like.username)\n    setLiked(usernames.includes(user))\n  }\n\n  useEffect(() => {\n    setDetailedView(true)\n  },[])\n\n  return (\n    <div className='blog'>\n      <div className='blog__description'>\n        <span className='blog__description--title'>{blog.title} </span><span className='blog__description--author'>- {blog.author}</span>\n      </div>\n      {detailedView ?\n        <div className='blog__button'>\n          <button className='btn-inline' onClick={detailHandler}>view</button>\n          <p className='blog__button--likes'>{`roots: ${blog.likes}`}</p>\n        </div>\n        :\n        <div className='blog__details'>\n          <div className='blog__button'>\n            <button className='btn-inline' onClick={detailHandler}>hide</button>\n            <p className='blog__button--likes'>{`roots: ${blog.likes}`}</p>\n          </div>\n          <div className='blog__info'>\n            <a className='blog__link' href={blog.url.slice(0,4) !== 'http' ? '//'+blog.url : blog.url}>{blog.url}</a>\n            <div className='blog__like-container'>\n              <button className ='blog__like-container--like-button' onClick={likeHandler}>{ liked ? <img src='img/thumb-green.png' alt='green thumbs up' className='blog__icon--unlike' /> : <img src='img/thumb-brand.png' alt='orange thumbs up' className='blog__icon--like' />}</button>\n            </div>\n          </div>\n          <div className='blog__posted'>\n            <h2>Posted By: <span>{blog.user.name}</span></h2>\n            {user === blog.user.username ? <button className='btn-inline blog__posted--remove' onClick={deleteHandler}>remove</button> : null}\n          </div>\n        </div>\n\n      }\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\n\nconst Icon = ({ iconName, component, componentTrail = '' }) => {\n  return (\n    <svg\n      className={`${component}__icon${componentTrail}`}\n      fill=\"black\"\n      width=\"16px\"\n      height=\"16px\"\n      viewBox=\"0 0 20 20\"\n    >\n      <use xlinkHref={`/sprite.svg#icon-${iconName}`} />\n    </svg>\n  )\n}\n\nexport default Icon\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Icon from './Icon'\n\n\nconst LoginForm = ({ login }) => {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const usernameHandler = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const passwordHandler = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    login({ username,password })\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <form className='login' onSubmit={handleLogin} id='loginForm'>\n      <Icon component='login' iconName='lock-closed-outline'/>\n      <div className='login__input'>\n        <label className='login__label'>Username</label>\n        <input\n          id='username'\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={usernameHandler}\n          label='Username:'\n        />\n      </div>\n      <div className='login__input'>\n        <label className='login__label'>Password</label>\n        <input\n          id='password'\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={passwordHandler}\n        />\n      </div>\n      <button className='btn-inline' type=\"submit\">login</button>\n      <Link className='btn-inline' to='/users'>Create an account here</Link>\n    </form>\n  )\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\n\nconst BlogForm = ({\n  createBlog\n}) => {\n\n  const [author, setAuthor] = useState('')\n  const [title, setTitle] = useState('')\n  const [url, setUrl] = useState('')\n\n  const authorHandler = (event) => {\n    setAuthor(event.target.value)\n  }\n  const titleHandler = (event) => {\n    setTitle(event.target.value)\n  }\n  const urlHandler = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({ author,title,url })\n    setTitle('')\n    setUrl('')\n    setAuthor('')\n  }\n\n\n  return (\n\n    <form className='blog-form' onSubmit={addBlog}>\n      <h2>Create New</h2>\n      <div className='blog-form__input'>\n        <label>Title</label>\n        <input\n          id='title'\n          type='text'\n          name='Title'\n          value={title}\n          onChange={titleHandler}\n        />\n      </div>\n      <div className='blog-form__input'>\n        <label>Author</label>\n        <input\n          id='author'\n          type='text'\n          value={author}\n          name='Author'\n          onChange={authorHandler}\n        />\n      </div>\n      <div className='blog-form__input'>\n        <label>Url</label>\n        <input\n          id='url'\n          type='text'\n          value={url}\n          name='Url'\n          onChange={urlHandler}\n        />\n      </div>\n      <button className='btn-inline blog-form__button'type=\"submit\">save</button>\n    </form>\n\n  )\n}\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div className='toggle'>\n      <div style={hideWhenVisible}>\n        <button className='btn-inline show__blogform__btn'onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div className='toggle' style={showWhenVisible}>\n        <button className='btn-inline show__blogform__btn' onClick={toggleVisibility}>cancel</button>\n        {props.children}\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createBlog = async (newObject) => {\n  const config ={\n    headers: { Authorization: token }\n  }\n  const response =  await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst likeBlog = async (newObject) => {\n  const config ={\n    headers: { Authorization: token }\n  }\n  const url = `${baseUrl}/${newObject.id}`\n  const response = await axios.put(url,newObject.likes,config)\n  return response.data\n}\n\nconst deleteBlog = async (newObject) => {\n  const config ={\n    headers: { Authorization: token }\n  }\n  const url = `${baseUrl}/${newObject.id}`\n  const response = await axios.delete(url,config)\n  return response.data\n}\n\nexport default { getAll, createBlog,likeBlog, deleteBlog, setToken }","import axios from 'axios'\nconst baseUrl ='/api/login'\n\n\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl='/api/users'\n\n\n\nconst createUser = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { createUser }\n\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div className='notification' id='notification'>\n      <h2 className={message.type}>{message.content}</h2>\n    </div>\n  )\n\n}\n\nexport default Notification","import React from 'react'\nimport Notification from './Notification'\n\nconst Header = ({ message, user, handleLogout }) => {\n  /*<h1 className='header__title--title'>Blog Cabin</h1>*/\n\n  return (\n    <div className='header'>\n      {!message ?\n        <div className='header__title'>\n          <img className='header__title--logo' src='img/logo-name.png' alt='blog cabin logo'></img>\n        </div>\n        :\n        <div className='header__title'>\n          <Notification message={message}/>\n        </div>\n\n      }\n      {user ?\n        <div className='logout'>\n          <p className='logout__user'>Hello, {user.name}</p>\n          <button className='btn-inline' onClick={handleLogout}>logout</button>\n        </div>:\n        null\n      }\n    </div>\n  )\n}\n\nexport default Header","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Icon from './Icon'\nimport { Link } from 'react-router-dom'\n\n\nconst UserForm = ({ userCreate }) => {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [name, setName] = useState('')\n\n  const usernameHandler = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const passwordHandler = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const nameHandler = (event) => {\n    setName(event.target.value)\n  }\n\n  const handleUserCreation = async (event) => {\n    event.preventDefault()\n    userCreate({ username, name, password })\n    setUsername('')\n    setPassword('')\n    setName('')\n  }\n\n  return (\n    <form className='login' onSubmit={handleUserCreation} id='userForm'>\n      <Icon component='login' iconName='pencil'/>\n      <div className='login__input'>\n        <label className='login__label'>Name</label>\n        <input\n          id='name'\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={nameHandler}\n          label='Name:'\n        />\n      </div>\n      <div className='login__input'>\n        <label className='login__label'>Username</label>\n        <input\n          id='username'\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={usernameHandler}\n          label='Username:'\n        />\n      </div>\n      <div className='login__input'>\n        <label className='login__label'>Password</label>\n        <input\n          id='password'\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={passwordHandler}\n        />\n      </div>\n      <button className='btn-inline' type=\"submit\"><Link to='/'/>Create User</button>\n      <Link className='btn-inline' to='/'>Back</Link>\n    </form>\n  )\n}\n\nUserForm.propTypes = {\n  login: PropTypes.func.isRequired,\n}\n\nexport default UserForm","import React, { useState, useEffect, useRef } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch, Route,\n} from 'react-router-dom'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport userService from './services/users'\nimport Header from './components/Header'\nimport UserForm from './components/UserForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [message, setMessage] = useState()\n  const [user, setUser] = useState(null)\n  const blogFormRef = useRef()\n\n  const blogForm = () => {\n    return (\n      <Togglable class='blog_form--toggle'buttonLabel='Create New Blog' ref={blogFormRef}>\n        <BlogForm\n          createBlog={addBlog}\n        />\n      </Togglable>\n    )\n  }\n\n  const getAllBlogs = async () => {\n    const reqBlogs = await blogService.getAll()\n    setBlogs(reqBlogs.sort((a,b) => b.likes - a.likes))\n  }\n\n\n  useEffect(getAllBlogs, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  },[])\n\n  const handleLogin = async (credentials) => {\n    try{\n      const user = await loginService.login(credentials)\n      window.localStorage.setItem('loggedInBlogappUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      setUser(user)\n      setMessage({ type: 'notification__message', content: `${user.username} login successful` })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n    catch(error){\n      setMessage({ type: 'notification__error', content: 'wrong credentials' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n  const handleUserCreation = async (credentials) => {\n    try{\n      const user = await userService.createUser(credentials)\n      setMessage({ type: 'notification__message', content: `${user.username} creation successful` })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n    catch(error){\n      setMessage({ type: 'notification__error', content: error.response.data.error } )\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n\n\n  const addBlog = async (blogObject) => {\n    try{\n      const blog = await blogService.createBlog(blogObject)\n      blogFormRef.current.toggleVisibility()\n      setBlogs(blogs.concat(blog))\n      setMessage({ type: 'notification__message', content: `a new blog ${blog.title}${blog.author === '' ? '' : ` by ${blog.author}`}` })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n    catch(error){\n      setMessage({ type: 'notification__error', content: 'Title and Url fields are required' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n\n  }\n\n  const likeBlog = async (blogObject) => {\n    try{\n      const blog = await blogService.likeBlog(blogObject)\n      let copy = [...blogs]\n      let updateIndex = copy.findIndex(blogToUpdate => blogToUpdate.id === blog.id)\n      copy[updateIndex] = blog\n      setBlogs(copy)\n    }\n    catch(error){\n      setMessage({ type: 'notification__error', content: 'like error' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n  const deleteBlog = async (blogObject) => {\n    try{\n      await blogService.deleteBlog(blogObject)\n      let copy = [...blogs]\n      copy = copy.filter(blog => blog.id !== blogObject.id)\n      setBlogs(copy)\n    }\n    catch(error){\n      setMessage({ type: 'notification__error', content: 'unauthorized' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    window.localStorage.removeItem('loggedInBlogappUser')\n    setUser(null)\n  }\n\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/users'>\n          <div className='container'>\n            <Header message={message} user={user} handleLogout={handleLogout} />\n            <div className='content'>\n              <UserForm userCreate={handleUserCreation}/>\n            </div>\n          </div>\n        </Route>\n        <Route path='/'>\n          <div className='container'>\n            <Header message={message} user={user} handleLogout={handleLogout} />\n            <div className='content'>\n              {user === null ?\n                <LoginForm\n                  login={handleLogin}\n                /> :\n                <div className='show__blogform'>\n                  {blogForm()}\n                </div>\n              }\n              {user !== null ? <div className='blog-container'>\n                {blogs.map(blog =>\n                  <Blog key={blog.id}\n                    blog={blog}\n                    updateLike={likeBlog}\n                    user={user.username}\n                    deleteBlog={deleteBlog}/>\n                )} </div> : null\n              }\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}